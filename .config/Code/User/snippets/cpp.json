{
    // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    "Print to console": {
        "prefix": "cp simple",
        "body": [
            "#define ll long long",
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "int main()",
            "{",
            "ios_base::sync_with_stdio(false);",
            "cin.tie(NULL);",
            "ll t;",
            "cin >> t;",
            "while (t--)",
            "{",
            "$0",
            "}",
            "return 0;",
            "}"
        ],
        "description": "preset for compititve programming"
    },
    "debug compititve": {
        "prefix": "cp hard",
        "body": [
            "#include <bits/stdc++.h>",
            "",
            "using namespace std;",
            "",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "typedef long double lld;",
            "",
            "#define INF 1e18",
            "#define MOD 1000000007",
            "#define nline \"\\n\"",
            "#define pb push_back",
            "#define ppb pop_back",
            "#define mp make_pair",
            "#define ff first",
            "#define ss second",
            "#define PI 3.141592653589793238462",
            "#define set_bits __builtin_popcountll",
            "#define sz(x) ((int)(x).size())",
            "#define all(x) (x).begin(), (x).end()",
            "#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)",
            "",
            "struct custom_hash {",
            "    static uint64_t splitmix64(uint64_t x) {",
            "        x += 0x9e3779b97f4a7c15;",
            "        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;",
            "        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;",
            "        return x ^ (x >> 31);",
            "    }",
            "",
            "    size_t operator()(uint64_t x) const {",
            "        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();",
            "        return splitmix64(x + FIXED_RANDOM);",
            "    }",
            "};",
            "",
            "#ifdef ONLINE_JUDGE",
            "#define debug(x)",
            "#else",
            "#define debug(x)  cerr << #x << \" \"; _print(x);         cerr << endl;",
            "#endif",
            "",
            "void _print(ll t)",
            "{",
            "cerr << t;",
            "}",
            "void _print(int t) { cerr << t; }",
            "void _print(string t) { cerr << t; }",
            "void _print(char t) { cerr << t; }",
            "void _print(lld t) { cerr << t; }",
            "void _print(double t) { cerr << t; }",
            "void _print(ull t) { cerr << t; }",
            "",
            "template <class T, class V>",
            "void _print(pair<T, V> p);",
            "template <class T>",
            "void _print(vector<T> v);",
            "template <class T>",
            "void _print(set<T> v);",
            "template <class T, class V>",
            "void _print(unordered_set<T> v);",
            "template <class T, class V>",
            "void _print(map<T, V> v);",
            "template <class T, class V>",
            "void _print(unordered_map<T, V> v);",
            "template <class T>",
            "void _print(multiset<T> v);",
            "template <class T, class V>",
            "void _print(pair<T, V> p)",
            "{",
            "cerr << \"{\";",
            "_print(p.ff);",
            "cerr << \",\";",
            "_print(p.ss);",
            "cerr << \"}\";",
            "}",
            "template <class T>",
            "void _print(vector<T> v)",
            "{",
            "cerr << \"[\";",
            "for (T i : v)",
            " {",
            "    _print(i);",
            "    cerr << \" \";",
            "}",
            "cerr << \"]\";",
            "}",
            "template <class T>",
            "void _print(set<T> v)",
            "{",
            "cerr << \"[ \";",
            "   for (T i : v)",
            "{",
            "    _print(i);",
            "    cerr << \" \";",
            "}",
            "cerr << \"]\";",
            "}",
            "template <class T>",
            "void _print(unordered_set<T> v)",
            "{",
            "cerr << \"[ \";",
            "for (T i : v)",
            "{",
            "_print(i);",
            "cerr << \" \";",
            "}",
            "cerr << \"]\";",
            "}",
            "template <class T>",
            "void _print(multiset<T> v)",
            "{",
            "cerr << \"[ \";",
            "for (T i : v)",
            "{",
            "_print(i);",
            "cerr << \" \";",
            "}",
            "cerr << \"]\";",
            "}",
            "template <class T, class V>",
            "void _print(map<T, V> v)",
            "{",
            "cerr << \"[ \";",
            "for (auto i : v)",
            "{",
            "_print(i);",
            "cerr << \" \";",
            "}",
            "cerr << \"]\";",
            "}",
            "template <class T, class V>",
            "void _print(unordered_map<T, V> v)",
            "{",
            "cerr << \"[ \";",
            "for (auto i : v)",
            "{",
            "_print(i);",
            "cerr << \" \";",
            "}",
            "cerr << \"]\";",
            "}",
            "",
            "void pain()",
            "{",
            "$0",
            "}",
            "int main()",
            "{",
            "#ifndef ONLINE_JUDGE",
            "freopen(\"input.txt\", \"r\", stdin);",
            "freopen(\"output.txt\", \"w\", stdout);",
            "freopen(\"error.txt\", \"w\", stderr);",
            "#endif",
            "fastio();",
            "ll t;",
            "cin >> t;",
            " for (int zx = 1; zx <= t; zx++)",
            "{",
            "// cout << \"Case #\" << zx << \": \";",
            "pain();",
            "}",
            "return 0;",
            "}"
        ],
        "description": "preset for compititve programming with debug tools"
    },
    "debug 2.0": {
        "prefix": "cp",
        "body": [
            "/*",
            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⢃⣀⡀⠀⠀⠀⠀⠀⠀⢾⠀⠀⡐⢀⡂⠀⠰⠀⡴⠀⣠⣀⡀⠰⡀⢀⣴⡿⢻⣷⣿⢿⣷⣶⣶⣶⣶⣶⣶⣿⢻⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⣽⣿⣿⣿⣷⣶⣦⣤⣄⣀⣿⡀⠊⣰⣾⣿⣦⣸⠀⢀⣾⡿⣿⣿⣶⣄⣸⣿⢆⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⡃⢉⣿⣿⡎⠙⠿⠻⣟⠿⣿⣇⣸⡿⣿⣯⣿⣿⣄⣿⠉⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⠙⠉⠛⣽⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⠀⠀⠀⣠⣾⣿⠟⠉⠙⠿⢿⣿⡆⠀⠀⠀⠀⠀⠀⠉⢻⣿⣸⣿⣿⣿⣿⣿⣷⣼⡿⣿⣿⣿⡆⠀⢻⣿⣽⣿⣿⣆⠀⠀⢽⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⠀⢀⣾⣿⣿⣿⣢⡀⣠⢞⣽⣎⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡟⣿⣿⣿⡇⠁⠀⠹⣿⡽⣿⣿⣿⡄⠀⢹⣿⣿⣿⣿⣆⠀⠺⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⢠⣿⣿⣿⣿⢟⠉⠻⣿⣿⣿⣿⣧⡄⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣧⠀⠀⠀⠈⠻⣿⣿⣽⣷⡄⠀⠹⣿⣿⣿⣿⣆⢸⣿⣿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⢠⣿⣿⣿⣿⣿⣿⠀⠀⠀⣽⢿⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⡆⠀⠀⠀⠀⠹⣿⣿⣿⣿⡄⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⢠⣿⣿⣿⣵⣿⣿⣿⣶⣤⣾⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⠀⢀⠀⠀⠀⠈⢻⣿⣿⣿⣆⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⢠⣿⣿⡿⢡⣿⣿⣿⢻⣿⣿⣿⣿⣿⠛⠃⠀⠀⠀⠀⢀⣉⣛⡦⣤⡀⠀⢻⣿⣿⣿⣦⠟⠀⠀⢀⣠⡤⠞⢿⣿⣿⡆⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⣿⣿⠟⢁⣿⣿⣿⠏⣽⣿⣿⣿⡌⢻⡀⠘⢶⣭⣭⣭⣅⣀⣀⡀⠈⠙⠓⢮⢻⣿⣿⣿⣤⠖⠛⠉⠀⠉⠉⠉⢻⣿⣿⣄⣀⣀⠙⣿⣿⣯⠁⠘⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⣿⠏⠀⣾⣿⣿⡟⣼⣿⣿⣿⣿⣿⣸⡇⠀⠀⠙⢦⣄⣀⣤⣼⣿⡿⠛⢿⠗⠀⢿⣿⣿⣿⠀⣾⡛⢉⣉⣩⣽⣿⡿⣿⣿⡛⠀⠀⠈⣿⣿⡇⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠁⠀⣸⣿⣿⡿⢀⣿⣿⣿⣿⣿⣿⡇⢧⠀⠀⠀⠀⠀⠉⠉⠩⣥⣤⣬⠗⠃⠀⠀⠻⣿⣿⣧⠀⠈⠉⠉⠩⠟⠻⠛⠛⣿⣿⠀⠀⢰⢿⢻⣿⣾⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⣸⣿⣿⡟⠀⣿⣿⣿⣿⣿⣿⣿⣧⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣆⠢⠀⠀⠀⠀⢠⡆⠀⠙⣿⣧⠀⣼⢞⡜⣻⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀",
            "⣰⣿⣿⡟⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣧⢳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠙⣿⣿⡄⠀⢀⡀⠀⡞⠀⠀⠀⠙⣿⣆⣯⠞⣽⣿⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀",
            "⣿⣿⠏⠀⢠⣿⣿⠋⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣡⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀",
            "⡿⠃⠀⠀⣿⣿⠋⢰⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣶⣄⡀⠀",
            "⠀⠀⠀⣼⣿⠋⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⢀⠀⠀⠈⢿⡇⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⡙⠿⣿⣷⣦",
            "⠀⠀⢰⣿⠏⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣞⠉⠀⠀⠀⠈⢿⡄⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠙⠻",
            "⠀⠀⣾⡟⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⢀⣀⣀⣀⣀⣈⣁⠀⠀⠀⠀⠘⣇⠀⠀⢀⣴⣿⣿⣸⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣦⡀",
            "⠀⢰⡟⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣷⢿⣦⡀⠀⠀⠀⠁⠀⠀⠉⠉⠉⠉⠉⠉⠀⠀⢸⡄⣠⣿⣿⣿⠏⣿⣿⡙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠙⢿⣿⣿⣿⣿⣿",
            "⢀⡿⠁⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢠⣿⡀⢻⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣨⣿⣿⢿⣿⠏⠀⡿⣿⣧⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠈⠻⣿⣿⣿",
            "⣸⠃⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⢀⣿⡏⣇⠈⢻⣽⣧⡀⠀⠀⠀⠀⠀⠀⠀⣠⠔⣣⡾⣯⡼⠋⣾⠏⠀⢠⢇⣿⣿⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠈⠻⣿",
            "⠏⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡟⠁⠀⣼⣿⠁⡏⠀⠘⣿⣿⠝⣦⡀⠀⠀⠀⠒⣋⣤⣿⣿⡿⠋⠀⢸⡏⠀⠀⡾⣼⣿⣿⡄⠀⠈⢻⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀",
            "⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠁⡜⠁⠀⢀⣿⢿⡇⣷⠀⠀⠘⣾⢧⣼⣿⣿⡖⣾⣻⣽⣿⠿⠋⠀⢀⣤⡟⠀⠀⣼⣷⣿⣿⣿⡇⠀⠀⠈⢯⠙⢿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀",
            "⣾⣿⣿⣿⣿⠿⠟⠛⠋⠁⠀⠀⠀⡸⠃⠀⠀⣼⡟⢸⣇⢹⠀⠀⠀⠘⢯⣻⣿⣧⣿⠟⠋⠙⠉⠀⣀⡴⠋⡽⠁⠀⣰⣧⣿⣿⣿⣿⡇⠀⠀⠀⠘⡇⠀⠉⠙⠛⠿⣿⣿⣷⡀⠀⠀",
            "⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠃⠀⠀⡇⣿⣆⠀⣿⠸⡄⠀⠀⠀⠀⠙⢾⠋⠀⠀⠀⢀⡤⠞⠋⠀⡸⠃⠀⣰⢇⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⢸⡄⠀⠀⠀⠀⢀⠼⠋⠓⠲⠤",
            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⣧⣿⣿⣿⣿⡄⣷⠀⠀⠀⠀⠀⠈⠳⣄⣤⠖⠋⠀⠀⠀⠈⠁⣸⣳⠟⣾⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠈⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠁⠀⠀⠀⣹⣿⣿⣿⣿⣧⢸⡄⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⢠⣿⠃⣸⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⡀⢻⢦⣄⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⠁⣸⣿⣿⣿⣿⣿⣿⣿⠀⠁⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠁⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣧⠸⡄⠈⠙⢿⡙⣆⠀⠀⠀⠀⣀⠴⠞⡟⠁⣰⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⣿⡀⢱⡀⠀⠨⣻⣯⣄⠀⣠⠞⠁⢀⡜⠁⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣧⠈⢣⡀⠀⠀⠁⠺⠚⠁⠀⢀⡞⠁⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣇⡈⣧⣀⣀⣀⣀⠀⠀⣠⠞⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡗⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "*/",
            "#include <bits/stdc++.h>",
            "",
            "#ifdef ONLINE_JUDGE",
            "#define debug(x)",
            "#else",
            "#include \"soham.h\"",
            "#endif",
            "",
            "using namespace std;",
            "",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "typedef long double lld;",
            "",
            "#define INF 9e18",
            "#define MOD 1000000007",
            "#define nline \"\\n\"",
            "#define pb push_back",
            "#define ppb pop_back",
            "#define mp make_pair",
            "#define ff first",
            "#define ss second",
            "#define PI 3.141592653589793238462",
            "#define set_bits __builtin_popcountll",
            "#define sz(x) ((int)(x).size())",
            "#define all(x) (x).begin(), (x).end()",
            "#define fastio()                      \\",
            "    ios_base::sync_with_stdio(false); \\",
            "    cin.tie(NULL);                    \\",
            "    cout.tie(NULL)",
            "",
            "struct custom_hash",
            "{",
            "    static uint64_t splitmix64(uint64_t x)",
            "    {",
            "        x += 0x9e3779b97f4a7c15;",
            "        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;",
            "        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;",
            "        return x ^ (x >> 31);",
            "    }",
            "",
            "    size_t operator()(uint64_t x) const",
            "    {",
            "        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();",
            "        return splitmix64(x + FIXED_RANDOM);",
            "    }",
            "};",
            "long long binpow(long long a, long long b) {",
            "    long long res = 1;",
            "    while (b > 0) {",
            "        if (b & 1)",
            "            res = res * a;",
            "        a = a * a;",
            "        b >>= 1;",
            "    }",
            "    return res;",
            "}",
            "",
            "void pain()",
            "{",
            "$0 ",
            "}",
            "int main()",
            "{",
            "#ifndef ONLINE_JUDGE",
            "    freopen(\"input.txt\", \"r\", stdin);",
            "    freopen(\"output.txt\", \"w\", stdout);",
            "    freopen(\"error.txt\", \"w\", stderr);",
            "#endif",
            "    fastio();",
            "    ll test_case = 1;",
            "    cin >> test_case;",
            "    for (int t = 1; t <= test_case; t++)",
            "    {",
            "        // cout << \"Case #\" << t << \": \";",
            "        pain();",
            "    }",
            "    return 0;",
            "}",
            ""
        ],
        "description": "debug 2.0"
    },
    "disjoint set": {
        "prefix": "dsu",
        "body": [
            "class DSU",
            "{",
            "    int *parent;",
            "    int *rank;",
            "",
            "public:",
            "    DSU(int n)",
            "    {",
            "        parent = new int[n];",
            "        rank = new int[n];",
            "        for (int i = 0; i < n; i++)",
            "        {",
            "            parent[i] = i;",
            "            rank[i] = 1;",
            "        }",
            "    }",
            "    // Find function",
            "    int find(int i)",
            "    {",
            "        if (parent[i] == i)",
            "            return i;",
            "        return parent[i] = find(parent[i]);",
            "    }",
            "    // union function",
            "    void unite(int x, int y)",
            "    {",
            "        int s1 = find(x);",
            "        int s2 = find(y);",
            "",
            "        if (s1 != s2)",
            "        {",
            "            if (rank[s1] < rank[s2])",
            "            {",
            "                parent[s1] = s2;",
            "                rank[s2] += rank[s1];",
            "            }",
            "            else",
            "            {",
            "                parent[s2] = s1;",
            "                rank[s1] += rank[s2];",
            "            }",
            "        }",
            "    }",
            "};"
        ],
        "description": "disjoint set"
    }
}